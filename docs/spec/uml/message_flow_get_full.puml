@startuml message_flow_get_full
skinparam participantFontSize 16
skinparam participantFontName Futura

skinparam queueFontSize 16
skinparam queueFontName Futura

skinparam actorFontSize 16
skinparam actorFontName Futura

skinparam collectionsFontSize 16
skinparam collectionsFontName Futura

skinparam DatabaseFontSize 16
skinparam DatabaseFontName Futura

actor user as "User"
participant client as "Client"
participant server as "API server"
participant wex as "Exchange"

queue qw as "NLDS Q" #lightgrey
note over qw
    topic=""nlds-api.route.*""
end note
collections work as "NLDS\nWorker" #lightgrey

queue qc as "Catalog Q" #springgreen
collections catalog_get as "Catalog" #springgreen
database catalog_db as "Catalog DB" #springgreen
note over qc
    topic=""*.catalog-get.*""
end note

queue qt as "Transfer Get Q" #gold
note over qt
    topic=""*.transfer-get.*""
end note
collections transfer_get as "Transfer Get" #gold

participant disk as "POSIX\nDisk" #GhostWhite
participant obj as "Object\nStore" #GhostWhite

queue qag as "Archive Get Q" #MistyRose
note over qag
    topic = nlds-api.archive-get.*
end note
collections archive_gets as "Archive Get" #MistyRose

participant tape as "Tape" #GhostWhite

user -> client : ""GET(filelist,target,\n\tuser,group,id)""

activate client
client -> server : ""GET(filelist,target,\n\tuser,group,id)""
deactivate client

activate server
server -> wex : key=""nlds-api.route.get""
deactivate server

activate wex
wex -> qw : key=""nlds-api.route.get""
deactivate wex

activate qw
qw -> work : key=""nlds-api.route.get""
deactivate qw

activate work
work -> wex : key=""nlds-api.catalog-get.start""
deactivate work

activate wex
wex -> qc : key=""nlds-api.catalog-get.start""
deactivate wex

activate qc
qc -> catalog_get : key=""nlds-api.catalog-get.start""
deactivate qc
note right of qc
    (*) here will match the calling
    application.
    `nlds-api` in this case.
end note

activate catalog_get
loop #SpringGreen for file in //filelist//
    catalog_get -> catalog_db : get file record from catalog holding
    activate catalog_db
        catalog_db -> catalog_get
    deactivate catalog_db
    alt #PaleGreen the file has OBJECT STORAGE location
        alt #MintCream the OBJECT STORAGE location is empty?
            catalog_get->catalog_get : add file record to //failed_list//
        else
            catalog_get->catalog_get : add file record to //object_store_list//
        end
    else the file has tape location
        note over catalog_db
            Create an empty OBJECT STORAGE location  
            here so that ""catalog_get"" does not 
            try to get a file twice from the tape.
        endnote
        catalog_get->catalog_db : create OBJECT STORAGE location
        catalog_get -> catalog_db : attach OBJECT STORAGE location to file record
        catalog_get->catalog_get : add file record to //tape_list//
        catalog_get->catalog_db : get aggregation details for TAPE location
        activate catalog_db
        catalog_db->catalog_get
        deactivate catalog_db
        catalog_get->catalog_get : add aggregation and file record to //tape_dict//
    else the file has no location
        catalog_get->catalog_get : add file record to //failed_list//
    end
end 

' catalog_get failed block
catalog_get -> wex : key=""nlds-api.catalog-get.failed""

activate wex
wex -> qw : key=""nlds-api.catalog-get.failed""
deactivate wex

activate qw
qw -> work : key=""nlds-api.catalog-get.failed""
deactivate qw

' archive-restore block
catalog_get -> wex : key=""nlds-api.catalog-get.archive-restore""

activate wex
wex -> qw : key=""nlds-api.catalog-get.archive-restore""
deactivate wex
activate qw
qw -> work : key=""nlds-api.catalog-get.archive-restore""
deactivate qw
activate work
work -> wex : key=""nlds-api.archive-get.prepare""
deactivate work
activate wex 
wex -> qag : key=""nlds-api.archive-get.prepare""
deactivate wex
activate qag
qag -> archive_gets : key=""nlds-api.archive-get.prepare""
deactivate qag


activate archive_gets
loop #LightPink for aggregate in //tape_dict//
    archive_gets -> tape : get aggregate status on tape
    activate tape
        tape -> archive_gets
    deactivate tape
    alt #FFFDFD aggregate needs to be prepared
        archive_gets -> tape : request aggregate is prepared
        activate tape
            tape -> archive_gets : //prepare_id//
        deactivate tape
        archive_gets -> archive_gets : add to //prepare_dict// with //prepare_id//
    else aggregate does not need to be prepared
        archive_gets->archive_gets : add to //prepare_complete_dict//
    end
end

archive_gets -> wex : key=""nlds-api.archive-get.start"", message=//prepare_complete_dict//

activate wex 

archive_gets -> wex : key=""nlds-api.archive-get.prepare-check"", message=//prepare_dict//
deactivate archive_gets

activate wex #LightPink
wex -> qag : key=""nlds-api.archive-get.prepare-check""

activate qag
qag -> archive_gets : key=""nlds-api.archive-get.prepare-check""
deactivate qag

activate archive_gets
loop #LightPink for prepare_id in //prepare_dict//
    archive_gets -> tape : get prepare status for prepare_id
    tape -> archive_gets
    alt #FFFDFD The prepare is complete for prepare_id
        archive_gets -> archive_gets : Add file record to //prepare_complete_dict//
    else The prepare is not complete
        archive_gets -> archive_gets : Add file record to //prepare_dict//
    end
end
archive_gets -> wex : key=""nlds-api.archive-get.prepare-check"", message=//prepare_dict//
deactivate wex

archive_gets -> wex : key=""nlds-api.archive-get.start"", message=//prepare_complete_dict//
deactivate archive_gets

    wex -> qag : key=""nlds-api.archive-get.start""
deactivate wex

activate qag
    qag -> archive_gets : key=""nlds-api.archive-get.start""
deactivate qag
activate archive_gets

' catalog_get completed block
catalog_get -> wex : key=""nlds-api.catalog-get.complete""
deactivate catalog_get

activate wex
wex -> qw : key=""nlds-api.catalog-get.complete""
deactivate wex

activate qw
qw -> work : key=""nlds-api.catalog-get.complete""
deactivate qw

activate work #Gold 

loop #LightPink for aggregate in //tape_dict//
    loop #FFF8F8 for file in aggregate
        archive_gets->obj : Extract file from aggregate
        obj->archive_gets
        alt #FFFDFD Extract succeeded
            archive_gets->archive_gets : Add file record to //object_store_list//
        else
            archive_gets->archive_gets : Add file record to //failed_list//
        end
    end
end

' archive_get failed block
archive_gets -> wex : key=""nlds-api.archive-get.failed""

activate wex
wex -> qw : key=""nlds-api.archive-get.failed""
deactivate wex

activate qw
qw -> work : key=""nlds-api.archive-get.failed""
deactivate qw

activate work
work -> wex : key=""nlds-api.catalog-remove.start""
deactivate work

activate wex
wex -> qc : key=""nlds-api.catalog-remove.start""
deactivate wex

activate qc
qc -> catalog_get : key=""nlds-api.catalog-remove.start""
deactivate qc

activate catalog_get
loop #LightGreen for file in failed_list
catalog_get -> catalog_db : remove OBJECT STORAGE storage location from file record
end
catalog_get -> wex : key=""nlds-api.catalog-remove.complete""
deactivate catalog_get

activate wex
wex -> work : key=""nlds-api.catalog-remove.complete""
deactivate wex
' end archive_get failed block

' archive_get completed block
archive_gets -> wex : key=""nlds-api.archive-get.complete""
deactivate archive_gets

activate wex
wex -> qw : key=""nlds-api.archive-get.complete""
deactivate wex

activate qw
qw -> work : key=""nlds-api.archive-get.complete""
deactivate qw

activate work
work -> wex : key=""nlds-api.catalog-update.start""
deactivate work

activate wex
wex -> qc : key=""nlds-api.catalog-update.start""
deactivate wex

activate qc
qc -> catalog_get : key=""nlds-api.catalog-update.start""
deactivate qc

activate catalog_get
loop #LightGreen for file in //transferred_list//
    catalog_get -> catalog_db : find OBJECT STORAGE location
    catalog_get -> catalog_db : update OBJECT STORAGE details
end
catalog_get -> wex : key=""nlds-api.catalog-update.complete""
deactivate catalog_get

activate wex
wex -> work : key=""nlds-api.catalog-update.complete""
deactivate wex

work -> wex : key=""nlds-api.transfer-get.init""
deactivate work

activate wex
wex -> qt : key=""nlds-api.transfer-get.init""
deactivate wex

activate qt
qt -> transfer_get : key=""nlds-api.transfer-get.init""
deactivate qt

activate transfer_get
loop #Gold for file in object_store_list[::1000]
    transfer_get -> transfer_get : add file to transfer_list
end

transfer_get -> wex : key=""nlds-api.transfer-get.start""
deactivate transfer_get

activate wex
wex -> qt : key=""nlds-api.transfer-get.start""
deactivate wex

activate qt
qt -> transfer_get : key=""nlds-api.transfer-get.start""
deactivate qt

activate transfer_get
loop #Gold for file in //transfer_list//
    transfer_get -> obj : copy file to target
    obj -> disk : copy file
    disk -> transfer_get
    alt #PaleGoldenRod the copy succeeded
        transfer_get -> transfer_get : add file record to //completed_list//
    else else
        transfer_get -> transfer_get : add file record to //failed_list//
    end
end
transfer_get -> wex : key=""nlds-api.transfer-get.complete""
activate wex
wex -> qw : key=""nlds-api.transfer-get.complete""
deactivate wex
activate qw
qw -> work : key=""nlds-api.transfer-get.complete""
deactivate qw

transfer_get -> wex : key=""nlds-api.transfer-get.failed""
deactivate transfer_get

activate wex
wex -> qw : key=""nlds-api.transfer-get.failed""
deactivate wex
activate qw
qw -> work : key=""nlds-api.transfer-get.failed""
deactivate qw

deactivate transfer_get

@enduml