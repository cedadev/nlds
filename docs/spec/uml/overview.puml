@startuml overview

together {
    actor user as "User"
    agent client as "Client API / CLI" #MediumPurple
    agent API_server as "API server" #DodgerBlue
}

interface monitoring as "Monitoring"
interface logging as "Logging"

database catalogdb as "Catalog" #SpringGreen
database monitordb as "Monitor" #tomato

cloud object_storage as "Object Storage"
component posix as "POSIX disk"
component tape as "Tape"

component sys_stat as "System Status" #LimeGreen

package Exchange{
    control mb as "Message Broker"
    queue mq as "Monitor Q" #tomato
    queue iq as "Index Q" #lightblue
    queue tpq as "Transfer Put Q" #gold
    queue tgq as "Transfer Get Q" #gold
    queue aq as "Archive Q" #LightSteelBlue
    queue qap as "Archive Put Q" #MistyRose
    queue qag as "Archive Get Q" #MistyRose
    queue wq as "NLDS Q" #lightgrey
    queue cq as "Catalog Q" #SpringGreen
    queue lq as "Logging Q" #hotpink
}

package Microservices {
    component monitor as "Monitor" #tomato
    component indexer as "Indexer" #lightblue
    component transfer_put as "Transfer Put" #gold
    component transfer_get as "Transfer Get" #gold
    component archy as "Archive\nWorker" #LightSteelBlue
    component archive_put as "Archive Put" #MistyRose
    component archive_get as "Archive Get" #MistyRose
    component work as "NLDS" #lightgrey
    component catalog as "Catalog" #SpringGreen
    component logger as "Logger" #hotpink
}

Microservices-->mb

user-->client
user-->sys_stat
client<-->API_server
API_server-->mb
sys_stat<--API_server

mb --> wq
mb --> iq
mb --> tpq
mb --> tgq
mb --> aq
mb --> qap
mb --> qag
mb --> cq
mb --> mq
mb --> lq

wq --> work
iq --> indexer
tpq --> transfer_put
tgq --> transfer_get
aq --> archy
qap --> archive_put
qag --> archive_get
cq --> catalog
mq --> monitor
lq --> logger


monitor --> monitoring
API_server <--- monitoring

logger --> logging
API_server <--- logging

catalog <--> catalogdb
transfer_put --> object_storage
transfer_put <-- posix
transfer_get ..> object_storage
transfer_get <.. posix
archive_put <-- object_storage
archive_put --> tape
archive_get <.. object_storage
archive_get ..> tape
indexer <-- posix

posix <-> object_storage
object_storage <-> tape

monitor <--> monitordb

@enduml 